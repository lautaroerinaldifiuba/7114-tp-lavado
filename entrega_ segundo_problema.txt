Primera impresión del problema:
- El problema a resolver no me parece complicado. Pero las formas que se me ocurrieron para encararlo, obtienen una solución posible (que probablemente no sea la óptima).
- Yo lo veo costoso computacionalmente, porque lo encuentro de naturaleza algorítmica e iterativa.
- Le suma algún grado de complicación adicional que el archivo de entrada no tenga cargadas todas las incompatiblidades y su recíproca, como pasaba en la entrega anterior.

Idea general de cómo resolver el problema planteado:
- Se me ocurrió tener un conjunto de lavados consolidados, que se van a ir creando de forma dinámica en la medida en la que voy analizando nuevas prendas.
- En la búsqueda de minimizar el tiempo total de lavado, entre varios intentos que hice, encontré que lo más importante era procesar las prendas ordenándolas previamente por tiempo de lavado de mayor a menor. Eso hace que se reduzca considerablemente el tiempo.
- Como mejora adicional, agregué que si dos prendas tienen el mismo tiempo de lavado, se procesa primero la que tiene mayor cantidad de restricciones (esto permite reducir un 5% adicional el tiempo total de lavado).
- Inicialmente no hay ningún lavado, y se va a crear el primer lavado la prenda que tarde más tiempo en lavarse.
- Luego, se continua con el resto de las prendas, empezando por las que tardan más tiempo en lavarse, y se va a ir comparando con el conjunto de lavados ya consolidados: La prenda se asignará al primer lavado contra el cual ninguna de las restricciones presente incompatibilidades; En caso de que la prenda presente incompatibilidades con todos los lavados ya creados, se creará un nuevo lavado que contendrá en principio solo a esta prenda.

Comentarios sobre el código:
- En esta entrega, en lugar de hacer programación tan estructurada como en las entregas anteriores, aposté por crear algunos objetos que me permitieron simplificar enormemente el código, y evitar errores por omisión.
- En relación al problema anterior, lo más relevante fue que el archivo no tiene cargadas de forma simétrica las incompatiblidades entre prendas (es decir, si la prenda p1 es incompatible con la p2, por ende también vale la recíproca). Como el archivo no estaba formateado de esa manera, tuve que hacer un preprocesamiento para tener una matriz simétrica con cada incompatibilidad y su recíproco, y luego trabajar en memoria con dichos datos.
- Asumí que el archivo de entrada viene siempre bien formateado, y que los registros vienen agrupados según el orden que detalla el enunciado (líneas de comentarios "c", única línea con definición del problema "p", todo el conjunto de incompatibilidades entre prendas "e" -ordenados de menor a mayor por el número de la primer prenda-, y al final todo el conjunto de tiempos de lavado "n" - también ordenados de menor a mayor por el número de prenda).

Comentarios finales de la entrega:
- En este caso, no se puede ver a ojo si la solución implementada se acerca a la óptima o no (en cuanto a minimizar el tiempo total de lavado).
- Lo que si puedo destacar, es que el tiempo computacional de procesamiento es mínimo (casi instantáneo), con respecto a la gran demora que yo esperaba que tuviera antes de empezar a resolverlo.
- Creo que se puede analizar resolverlo con soluciones alternativas para ver si se pueden evaluar más posibilidades, y efectivamente acercarnos más al óptimo (por ejemplo, plantenado algún tipo de matriz sobre la que se pueda operar iterativamente).
- Me llamó la atención que los mejores tiempos se obtengan ordenando las prendas por tiempo de lavado decreciente. Antes de codificarlo y probarlo, yo me hubiese inclinado a que el mejor resultado lo iba a obtener ordenando las prendas por cantidad de restricciones de mayor a menor.

